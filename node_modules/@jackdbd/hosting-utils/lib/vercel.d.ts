export type VercelJSONHeadersEntry = {
    key: string;
    value: string;
};
export type VercelJSONHeaderObject = {
    source: string;
    headers: VercelJSONHeadersEntry[];
    has?: any[];
    missing?: any[];
};
export type VercelJSON = {
    headers: VercelJSONHeaderObject[];
};
export interface Config {
    filepath: string;
    headerKey: string;
    headerValue: string;
    sources: string[];
}
type Release = () => Promise<void>;
export declare const defOnAcquiredLock: ({ filepath, headerKey, headerValue, sources }: Config) => (release: Release) => Promise<void>;
/**
 * Updates an existing `vercel.json` file.
 *
 * @see [vercel.com - Configuring Projects with vercel.json](https://vercel.com/docs/projects/project-configuration)
 */
export declare const updateVercelJSON: (config: Config) => Promise<{
    error: Error;
    value?: undefined;
} | {
    value: string;
    error?: undefined;
}>;
export {};
//# sourceMappingURL=vercel.d.ts.map